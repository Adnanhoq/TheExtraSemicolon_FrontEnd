{% extends "./layouts/main.njk" %}

    {% block pageTitle %}
        Update Profile Picture
    {% endblock %}

    {% block scripts %}
    <script type="text/javascript" src="https://unpkg.com/webcam-easy/dist/webcam-easy.min.js"></script>
    <script src="/scripts/imagetracer_v1.2.6.js"></script>
    <script src="/scripts/imageScaling.js"></script>
    {% endblock %}

{% block content %}

<dialog id="dialog">
    <div>
    <h2>Accept your new profile picture?</h2>
    <svg id="thumbnail" class="rounded-circle" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="500" height="500"></svg>
    <form action="/profile/picture" method="post">
    <input type="hidden" name="profilePicture" id="profilePicture"/>
    <div class="mt-4">
    <button class="btn btn-danger" type="button" id="cancel">Cancel</button>
    <button class="btn btn-success" type="submit" id="accept">Accept</button>
    <div>
    </form>
    </div>
</dialog>

<div class="d-flex justify-content-center">
<div class="d-flex flex-column justify-content-center">
        {% if errormessage %}
            <h3 class="error-message">{{ errormessage }}</h3>
        {% endif %}
        <h2 class="mb-4">Update your profile picture:</h2>
        <video id="webcam" autoplay playsinline class="rounded-circle" width="500" height="500"></video>
        <canvas id="canvas" class="d-none"></canvas>
        <div class="d-flex w-100 justify-content-center">
            <button class="mt-3 btn btn-secondary w-50 mb-5" id="takePicture">Take Picture</button>
        </div>
</div>
</div>

<script>
const webcamElement = document.getElementById('webcam');
const canvasElement = document.getElementById('canvas');
const dialog = document.getElementById("dialog");
const snapSoundElement = document.getElementById('snapSound');
const webcam = new Webcam(webcamElement, 'user', canvasElement, snapSoundElement);
const cancelButton = document.getElementById('cancel');
const profile = document.getElementById('profilePicture');

webcam.start()
   .then(result =>{
      console.log("webcam started");
   })
   .catch(err => {
       console.log(err);
   });

document.getElementById('takePicture').addEventListener('click', takePicture);

async function takePicture() {
    var image = webcam.snap();

    var scaledImg = await resizedataURL(image, 32, 32);
    console.log(scaledImg);
    var thumbnail = document.getElementById('thumbnail');
    let child = thumbnail.lastElementChild;
    while (child) {
        thumbnail.removeChild(child);
        child = thumbnail.lastElementChild;
    }

    ImageTracer.imageToSVG(
        image,
        function(svgstr) {
            ImageTracer.appendSVGString(svgstr, 'thumbnail');
        },
        'Original'
    );

    ImageTracer.imageToSVG(
        scaledImg,
        function(svgstr) {
            profile.value = svgstr;
        },
        'Original'
    )
    dialog.showModal();
}

document.getElementById('cancel').addEventListener('click',
() => dialog.close());
document.getElementById('accept').addEventListener('click',
() => dialog.close());

webcam.stop();

</script>
{% endblock %}